apply plugin: 'com.android.application'
apply from: "polyv_loadparams.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.easefun.polyv.livescenes"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        renderscriptSupportModeEnabled true

        multiDexEnabled true

        //依赖的包可能支持很多类型的ABI
        //为了避免打包了我们没有支持的ABI，指定需要打包的ABI目录
        ndk {
            abiFilters 'arm64-v8a', "armeabi-v7a", "x86" // DO NOT MODIFY THIS LINE, IT'S UPDATED BY BUILD MACHINE AUTOMATICALLY.
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    signingConfigs {
        release {
            storeFile file("../sign.jks")
            storePassword "123456"
            keyAlias "key"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    sourceSets {
        main {
            java {
                //将下面的路径也放入到编译路径内，这样才能将动态生成的登录文件加入编译中
                srcDir project.ext.get("PLVGeneratorPath")
            }
            res.srcDirs(
                    'src/main/res',
                    'src/main/res/layouts/hiclass'
            )
        }
    }
    packagingOptions {
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'
    implementation project(':polyvLiveEcommerceScene')
    implementation project(':polyvLiveCloudClassScene')
    implementation project(':polyvLiveStreamerScene')
    implementation project(':polyvStreamerAloneScene')
    implementation project(':polyvLiveHiClassScene')

    implementation 'net.polyv.android:beauty-byted-impl:1.0.3'

}

